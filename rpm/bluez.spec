# 
# Do NOT Edit the Auto-generated Part!
# Generated by: spectacle version 0.27
# 

Name:       bluez

# >> macros
# << macros

Summary:    Bluetooth utilities
Version:    5.22
Release:    1
Group:      Applications/System
License:    GPLv2+
URL:        http://www.bluez.org/
Source0:    %{name}-%{version}.tar.xz
Source1:    bluetooth.modprobe
Source100:  bluez.yaml
Patch0:     0001-Allow-using-obexd-without-systemd-in-the-user-session.patch
Requires:   bluez-libs = %{version}
Requires:   dbus >= 0.60
Requires:   hwdata >= 0.215
Requires:   bluez-configs
Requires:   systemd
Requires(preun): systemd
Requires(post): systemd
Requires(postun): systemd
BuildRequires:  pkgconfig(dbus-1)
BuildRequires:  pkgconfig(libusb)
BuildRequires:  pkgconfig(alsa)
BuildRequires:  pkgconfig(udev)
BuildRequires:  pkgconfig(sndfile)
BuildRequires:  pkgconfig(glib-2.0)
BuildRequires:  pkgconfig(check)
BuildRequires:  pkgconfig(libical)
BuildRequires:  flex
BuildRequires:  readline-devel
Provides:   bluez-alsa
Conflicts:   bluez-alsa

%description
The Bluetooth stack for Linux.


%package libs
Summary:    Libraries for use in Bluetooth applications
Group:      System/Libraries
Requires:   %{name} = %{version}-%{release}
Requires(post): /sbin/ldconfig
Requires(postun): /sbin/ldconfig

%description libs
Libraries for use in Bluetooth applications.

%package libs-devel
Summary:    Development libraries for Bluetooth applications
Group:      Development/Libraries
Requires:   %{name} = %{version}-%{release}
Requires:   bluez-libs = %{version}

%description libs-devel
bluez-libs-devel contains development libraries and headers for
use in Bluetooth applications.


%package cups
Summary:    CUPS printer backend for Bluetooth printers
Group:      System/Daemons
Requires:   %{name} = %{version}-%{release}
Requires:   bluez-libs = %{version}
Requires:   cups

%description cups
This package contains the CUPS backend

%package hid2hci
Summary:    Put HID proxying bluetooth HCI's into HCI mode
Group:      System/Daemons
Requires:   %{name} = %{version}-%{release}

%description hid2hci
Most allinone PC's and bluetooth keyboard / mouse sets which include a
bluetooth dongle, ship with a so called HID proxying bluetooth HCI.
The HID proxying makes the keyboard / mouse show up as regular USB HID
devices (after connecting using the connect button on the device + keyboard),
which makes them work without requiring any manual configuration.

The bluez-hid2hci package contains the hid2hci utility and udev rules to
automatically switch supported Bluetooth devices into regular HCI mode.

Install this package if you want to use the bluetooth function of the HCI
with other bluetooth devices like for example a mobile phone.

Note that after installing this package you will first need to pair your
bluetooth keyboard and mouse with the bluetooth adapter before you can use
them again. Since you cannot use your bluetooth keyboard and mouse until
they are paired, this will require the use of a regular (wired) USB keyboard
and mouse.


%package test
Summary:    Test Programs for BlueZ
Group:      Development/Tools
Requires:   %{name} = %{version}-%{release}
Requires:   bluez-libs = %{version}
Requires:   dbus-python
Requires:   pygobject2

%description test
Scripts for testing BlueZ and its functionality

%package doc
Summary:    Documentation for bluez
Group:      Documentation
Requires:   %{name} = %{version}-%{release}

%description doc
This package provides man page documentation for bluez

%package configs-maui
Summary:    Default configuration for bluez
Group:      Applications/System
Requires:   %{name} = %{version}-%{release}
Provides:   bluez-configs

%description configs-maui
This package provides default configs for bluez

%prep
%setup -q -n %{name}-%{version}/upstream

# 0001-Allow-using-obexd-without-systemd-in-the-user-session.patch
%patch0 -p1
# >> setup
# << setup

%build
# >> build pre
libtoolize -f -c
autoreconf -f -i
# << build pre

%configure --disable-static \
    --enable-cups \
    --enable-tools \
    --enable-library \
    --enable-test \
    --enable-sixaxis \
    --enable-experimental \
    --with-systemdsystemunitdir=%{_unitdir} \
    --with-systemduserunitdir=%{_userunitdir}

make %{?_smp_mflags}

# >> build post
# << build post

%install
rm -rf %{buildroot}
# >> install pre
# << install pre
%make_install

# >> install post

# Ship upstream main config file
install -dm755 %{buildroot}%{_sysconfdir}/bluetooth
install -Dm644 src/main.conf %{buildroot}%{_sysconfdir}/bluetooth/main.conf

# Fix module loading errors
install -dm755 %{buildroot}%{_prefix}/%{_lib}/modprobe.d
install -Dm644 %{SOURCE1} %{buildroot}%{_prefix}/%{_lib}/modprobe.d/bluetooth-usb.conf

# Add experimental BT LE manager - FS#41132
install -Dm755 tools/btmgmt %{buildroot}%{_bindir}/btmgmt
# Add gatttool useful with Bluetooth 4.0LE
install -Dm755 attrib/gatttool %{buildroot}%{_bindir}/gatttool

# << install post

%preun
if [ "$1" -eq 0 ]; then
systemctl stop bluetooth.service
fi

%post
systemctl daemon-reload
systemctl reload-or-try-restart bluetooth.service

%postun
systemctl daemon-reload

%post libs -p /sbin/ldconfig

%postun libs -p /sbin/ldconfig

%files
%defattr(-,root,root,-)
%config %{_sysconfdir}/dbus-1/system.d/bluetooth.conf
%{_bindir}/*
%{_libdir}/bluetooth/*
%{_libexecdir}/bluetooth/*
%{_prefix}/%{_lib}/modprobe.d/*
%{_datadir}/dbus-1/system-services/org.bluez.service
%{_datadir}/dbus-1/services/org.bluez.obex.service
%{_unitdir}/bluetooth.service
%{_userunitdir}/obex.service
# >> files
# << files

%files libs
%defattr(-,root,root,-)
%doc AUTHORS COPYING INSTALL README
%{_libdir}/libbluetooth.so.*
# >> files libs
# << files libs

%files libs-devel
%defattr(-,root,root,-)
%{_libdir}/libbluetooth.so
%dir %{_includedir}/bluetooth
%{_includedir}/bluetooth/*
%{_libdir}/pkgconfig/bluez.pc
# >> files libs-devel
# << files libs-devel

%files cups
%defattr(-,root,root,-)
%{_libdir}/cups/backend/bluetooth
# >> files cups
# << files cups

%files hid2hci
%defattr(-,root,root,-)
%{_prefix}/%{_lib}/udev/hid2hci
%{_udevrulesdir}/97-hid2hci.rules
# >> files hid2hci
# << files hid2hci

%files test
%defattr(-,root,root,-)
%{_libdir}/bluez/test/*
# >> files test
# << files test

%files doc
%defattr(-,root,root,-)
%doc %{_mandir}/man1/*
%doc %{_mandir}/man8/*
# >> files doc
# << files doc

%files configs-maui
%defattr(-,root,root,-)
%config(noreplace) %{_sysconfdir}/bluetooth/*
# >> files configs-maui
# << files configs-maui
